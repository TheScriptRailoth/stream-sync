name: Build Flutter APK and send to Telegram

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Flutter Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Fix flutter_bluetooth_serial Manifest
        run: sed -i '/package/d' /home/runner/.pub-cache/hosted/pub.dev/flutter_bluetooth_serial-0.4.0/android/src/main/AndroidManifest.xml

      - name: Add namespace to flutter_bluetooth_serial build.gradle
        run: sed -i "s|android {|android {\n    namespace 'io.github.edufolly.flutterbluetoothserial'|" /home/runner/.pub-cache/hosted/pub.dev/flutter_bluetooth_serial-0.4.0/android/build.gradle

      - name: Fix permission_handler Manifest
        run: sed -i '/package/d' /home/runner/.pub-cache/hosted/pub.dev/permission_handler-8.3.0/android/src/main/AndroidManifest.xml

      - name: Add namespace to permission_handler build.gradle
        run: sed -i "s|android {|android {\n    namespace 'com.baseflow.permissionhandler'|" /home/runner/.pub-cache/hosted/pub.dev/permission_handler-8.3.0/android/build.gradle

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK as artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  notify:
    name: Notify Telegram
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Send success message to Telegram
        if: success()
        run: |
          curl -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
               -F document=@build/app/outputs/flutter-apk/app-release.apk \
               -F caption="üéâ New Build Available! ‚úÖ Download the APK by clicking the link below." \
               https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Send failure message to Telegram
        if: failure()
        run: |
          curl -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
               -F text="‚ö†Ô∏è Build Failed! ‚ùå Please check the logs for more details." \
               https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
